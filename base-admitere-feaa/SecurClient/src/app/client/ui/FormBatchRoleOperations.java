/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FormBatchRoleOperations.java
 *
 * Created on Jul 21, 2009, 10:51:36 PM
 */

package app.client.ui;

import app.client.controller.RichClientApplication;
import app.controller.AppActionEvent;
import app.controller.patterns.IApplicationEvent;
import app.domain.model.AppRole;
import app.domain.model.AppUser;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author catalin
 */
public class FormBatchRoleOperations extends javax.swing.JFrame {

    /** Creates new form FormBatchRoleOperations */
    public FormBatchRoleOperations() {
        initComponents();
        loadRefresh(null);
    }

    private void loadRefresh(AppRole selectedRole){
        IApplicationEvent evt = new AppActionEvent("FormBatchRoleOperations", "LoadRoles");
        evt = RichClientApplication.getActionController().actionPerformed(evt);
        this.appRoles.addAll((List) evt.getValue("roles"));
        this.bindingGroup.getBinding("bindCboAppRoles").unbind();
        this.bindingGroup.getBinding("bindCboAppRoles").bind();

        evt = new AppActionEvent("FormDirectSecurOperations", "LoadUsers");
        evt = RichClientApplication.getActionController().actionPerformed(evt);
        this.appUsers.addAll((List) evt.getValue("users"));
        this.bindingGroup.getBinding("bindLstAppUsers").unbind();
        this.bindingGroup.getBinding("bindLstAppUsers").bind();

        if (selectedRole != null)
            this.cboAppRoles.setSelectedItem(selectedRole);
        else
            this.cboAppRoles.setSelectedIndex(0);

//        if (this.cboAppRoles.getSelectedItem() != null){
//            evt = new AppActionEvent("FormDirectSecurOperations", "LoadRoleUsers");
//            evt.setValue("role", this.cboAppRoles.getSelectedItem());
//            evt = RichClientApplication.getActionController().actionPerformed(evt);
//            this.selectedUsers.addAll((List) evt.getValue("users"));
//
//            this.appUsers.removeAll(this.selectedUsers);
//
//            this.bindingGroup.getBinding("bindLstSelectedUsers").unbind();
//            this.bindingGroup.getBinding("bindLstSelectedUsers").bind();
//
//            this.bindingGroup.getBinding("bindLstAppUsers").unbind();
//            this.bindingGroup.getBinding("bindLstAppUsers").bind();
//        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        appRoles = new java.util.ArrayList<app.domain.model.AppRole>();
        selectedUsers = new java.util.ArrayList<app.domain.model.AppUser>();
        appUsers = new java.util.ArrayList<app.domain.model.AppUser>();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cboAppRoles = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstAppUsers = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstSelectedUsers = new javax.swing.JList();
        btnAdd = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnAddAll = new javax.swing.JButton();
        btnRemoveAll = new javax.swing.JButton();
        btnBatchSetUsersRoleEnable = new javax.swing.JButton();
        btnBatchSetUserRoleDisable = new javax.swing.JButton();
        btnSortSelectedUsers = new javax.swing.JButton();
        btnSortAppUsers = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Roluri");

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, appRoles, cboAppRoles, "bindCboAppRoles");
        bindingGroup.addBinding(jComboBoxBinding);

        cboAppRoles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboAppRolesActionPerformed(evt);
            }
        });

        org.jdesktop.swingbinding.JListBinding jListBinding = org.jdesktop.swingbinding.SwingBindings.createJListBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, appUsers, lstAppUsers, "bindLstAppUsers");
        jListBinding.setDetailBinding(org.jdesktop.beansbinding.ELProperty.create("${dbUser}"));
        bindingGroup.addBinding(jListBinding);

        lstAppUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstAppUsersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lstAppUsers);

        jLabel2.setText("Utilizatori disponibili");

        jLabel3.setText("Utilizatori selectati");

        jListBinding = org.jdesktop.swingbinding.SwingBindings.createJListBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, selectedUsers, lstSelectedUsers, "bindLstSelectedUsers");
        jListBinding.setDetailBinding(org.jdesktop.beansbinding.ELProperty.create("${dbUser}"));
        bindingGroup.addBinding(jListBinding);

        jScrollPane2.setViewportView(lstSelectedUsers);

        btnAdd.setText(">");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnRemove.setText("<");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnAddAll.setText(">>");
        btnAddAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAllActionPerformed(evt);
            }
        });

        btnRemoveAll.setText("<<");
        btnRemoveAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveAllActionPerformed(evt);
            }
        });

        btnBatchSetUsersRoleEnable.setText("Acorda rolul selectat");
        btnBatchSetUsersRoleEnable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatchSetUsersRoleEnableActionPerformed(evt);
            }
        });

        btnBatchSetUserRoleDisable.setText("Retrage rolul selectat");
        btnBatchSetUserRoleDisable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatchSetUserRoleDisableActionPerformed(evt);
            }
        });

        btnSortSelectedUsers.setText("A..Z");
        btnSortSelectedUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortSelectedUsersActionPerformed(evt);
            }
        });

        btnSortAppUsers.setText("A..Z");
        btnSortAppUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortAppUsersActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBatchSetUsersRoleEnable, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboAppRoles, 0, 359, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSortAppUsers))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAddAll, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                            .addComponent(btnRemoveAll, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                            .addComponent(btnRemove, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                            .addComponent(btnRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(16, 16, 16)
                                .addComponent(btnSortSelectedUsers))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)))
                    .addComponent(btnBatchSetUserRoleDisable, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboAppRoles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(btnSortSelectedUsers)
                            .addComponent(btnSortAppUsers))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddAll)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoveAll)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(btnRefresh)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBatchSetUsersRoleEnable, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBatchSetUserRoleDisable, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        if (this.lstSelectedUsers.getSelectedIndices().length == 1){
            if (this.lstSelectedUsers.getSelectedValue() != null &&
                     !this.appUsers.contains(this.lstSelectedUsers.getSelectedValue())){

                this.appUsers.add(this.selectedUsers.get(this.lstSelectedUsers.getSelectedIndex()));
                this.selectedUsers.remove(this.selectedUsers.get(this.lstSelectedUsers.getSelectedIndex()));

                this.bindingGroup.getBinding("bindLstSelectedUsers").unbind();
                this.bindingGroup.getBinding("bindLstSelectedUsers").bind();
                this.bindingGroup.getBinding("bindLstAppUsers").unbind();
                this.bindingGroup.getBinding("bindLstAppUsers").bind();
            }
        }
        if (this.lstSelectedUsers.getSelectedIndices().length > 1){
            int[] selectedPositions = this.lstSelectedUsers.getSelectedIndices();
            List<AppUser> toRemoveUsers = new ArrayList<AppUser>();
            for (int i = 0; i < selectedPositions.length; i++){
                toRemoveUsers.add(this.selectedUsers.get(selectedPositions[i]));
            }
            for (AppUser toRemoveUser : toRemoveUsers){
               this.appUsers.add(toRemoveUser);
               this.selectedUsers.remove(toRemoveUser);
            }
            this.bindingGroup.getBinding("bindLstSelectedUsers").unbind();
            this.bindingGroup.getBinding("bindLstSelectedUsers").bind();
            this.bindingGroup.getBinding("bindLstAppUsers").unbind();
            this.bindingGroup.getBinding("bindLstAppUsers").bind();
        }
}//GEN-LAST:event_btnRemoveActionPerformed

    private void btnBatchSetUsersRoleEnableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatchSetUsersRoleEnableActionPerformed
        if (this.cboAppRoles.getSelectedItem() != null && !this.selectedUsers.isEmpty()) {
            IApplicationEvent event = new AppActionEvent("FormBatchRoleOperations", "BatchSetUsersRole");
            event.setValue("users", this.selectedUsers);
            event.setValue("role", this.cboAppRoles.getSelectedItem());
            event.setValue("enabled", true);
            event = RichClientApplication.getActionController().actionPerformed(event);
            
        }
}//GEN-LAST:event_btnBatchSetUsersRoleEnableActionPerformed

    private void cboAppRolesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboAppRolesActionPerformed
        if (this.cboAppRoles.getSelectedItem() != null){
            IApplicationEvent event = new AppActionEvent("FormBatchRoleOperations", "LoadRoleUsers");
            event.setValue("role", this.cboAppRoles.getSelectedItem());
            event = RichClientApplication.getActionController().actionPerformed(event);
            this.selectedUsers.removeAll(this.selectedUsers);
            this.selectedUsers.addAll((List) event.getValue("users"));

            this.appUsers.removeAll(this.selectedUsers);

            this.bindingGroup.getBinding("bindLstSelectedUsers").unbind();
            this.bindingGroup.getBinding("bindLstSelectedUsers").bind();

            this.bindingGroup.getBinding("bindLstAppUsers").unbind();
            this.bindingGroup.getBinding("bindLstAppUsers").bind();

            this.lstSelectedUsers.removeAll();
        }
    }//GEN-LAST:event_cboAppRolesActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (this.lstAppUsers.getSelectedIndices().length == 1){
            if (this.lstAppUsers.getSelectedValue() != null &&
                     !this.selectedUsers.contains(this.lstAppUsers.getSelectedValue())){
                this.selectedUsers.add(this.appUsers.get(this.lstAppUsers.getSelectedIndex()));
                this.appUsers.remove(this.appUsers.get(this.lstAppUsers.getSelectedIndex()));
                this.bindingGroup.getBinding("bindLstSelectedUsers").unbind();
                this.bindingGroup.getBinding("bindLstSelectedUsers").bind();
                this.bindingGroup.getBinding("bindLstAppUsers").unbind();
                this.bindingGroup.getBinding("bindLstAppUsers").bind();
            }
        }
        if (this.lstAppUsers.getSelectedIndices().length > 1){
            int[] selectedPositions = this.lstAppUsers.getSelectedIndices();
            for (int i = 0; i < selectedPositions.length; i++){
               this.selectedUsers.add(this.appUsers.get(selectedPositions[i]));
               this.appUsers.remove(selectedPositions[i]);
            }
            this.bindingGroup.getBinding("bindLstSelectedUsers").unbind();
            this.bindingGroup.getBinding("bindLstSelectedUsers").bind();
            this.bindingGroup.getBinding("bindLstAppUsers").unbind();
            this.bindingGroup.getBinding("bindLstAppUsers").bind();
        }

    }//GEN-LAST:event_btnAddActionPerformed

    private void btnBatchSetUserRoleDisableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatchSetUserRoleDisableActionPerformed
        if (this.cboAppRoles.getSelectedItem() != null && !this.selectedUsers.isEmpty()) {
            IApplicationEvent event = new AppActionEvent("FormBatchRoleOperations", "BatchSetUsersRole");
            event.setValue("users", this.selectedUsers);
            event.setValue("role", this.cboAppRoles.getSelectedItem());
            event.setValue("enabled", false);
            event = RichClientApplication.getActionController().actionPerformed(event);

            AppRole currentRole = (AppRole) this.cboAppRoles.getSelectedItem();
            this.cboAppRoles.setSelectedItem(currentRole);
        }
    }//GEN-LAST:event_btnBatchSetUserRoleDisableActionPerformed

    private void btnAddAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAllActionPerformed
//        List<AppUser> existingUsers = new ArrayList<AppUser>(this.selectedUsers);
        this.selectedUsers.addAll(this.appUsers);
//        this.selectedUsers.removeAll(existingUsers);
        this.appUsers.removeAll(this.selectedUsers);

        this.bindingGroup.getBinding("bindLstSelectedUsers").unbind();
        this.bindingGroup.getBinding("bindLstSelectedUsers").bind();
        this.bindingGroup.getBinding("bindLstAppUsers").unbind();
        this.bindingGroup.getBinding("bindLstAppUsers").bind();
    }//GEN-LAST:event_btnAddAllActionPerformed

    private void btnRemoveAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveAllActionPerformed
//        List<AppUser> existingUsers = new ArrayList<AppUser>(this.selectedUsers);
//        this.selectedUsers.addAll(this.appUsers);
//        this.selectedUsers.removeAll(existingUsers);
        this.appUsers.addAll(this.selectedUsers);
        this.selectedUsers.removeAll(this.appUsers);

        this.bindingGroup.getBinding("bindLstSelectedUsers").unbind();
        this.bindingGroup.getBinding("bindLstSelectedUsers").bind();
        this.bindingGroup.getBinding("bindLstAppUsers").unbind();
        this.bindingGroup.getBinding("bindLstAppUsers").bind();
    }//GEN-LAST:event_btnRemoveAllActionPerformed

    private void btnSortSelectedUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortSelectedUsersActionPerformed
        IApplicationEvent event = new AppActionEvent("FormBatchRoleOperations", "SortUsers");
        event.setValue("users", this.selectedUsers);
        event = RichClientApplication.getActionController().actionPerformed(event);
//        this.selectedUsers.clear();
//        this.selectedUsers.addAll((List<AppUser>)event.getValue("users"));
        this.bindingGroup.getBinding("bindLstSelectedUsers").unbind();
        this.bindingGroup.getBinding("bindLstSelectedUsers").bind();
        this.bindingGroup.getBinding("bindLstAppUsers").unbind();
        this.bindingGroup.getBinding("bindLstAppUsers").bind();
}//GEN-LAST:event_btnSortSelectedUsersActionPerformed

    private void btnSortAppUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortAppUsersActionPerformed
        IApplicationEvent event = new AppActionEvent("FormBatchRoleOperations", "SortUsers");
        event.setValue("users", this.appUsers);
        event = RichClientApplication.getActionController().actionPerformed(event);
//        this.appUsers.clear();
//        this.appUsers.addAll((List<AppUser>)event.getValue("users"));
        this.bindingGroup.getBinding("bindLstSelectedUsers").unbind();
        this.bindingGroup.getBinding("bindLstSelectedUsers").bind();
        this.bindingGroup.getBinding("bindLstAppUsers").unbind();
        this.bindingGroup.getBinding("bindLstAppUsers").bind();
}//GEN-LAST:event_btnSortAppUsersActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        AppRole currentRole = (AppRole) this.cboAppRoles.getSelectedItem();
        this.appRoles.clear();
        this.appUsers.clear();
        this.selectedUsers.clear();
        this.loadRefresh(currentRole);
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void lstAppUsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstAppUsersMouseClicked
        if (evt.getClickCount() == 2){
          this.btnAddActionPerformed(null);
        }
        //btnAddActionPerformed(java.awt.event.ActionEvent evt)
    }//GEN-LAST:event_lstAppUsersMouseClicked

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormBatchRoleOperations().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.util.ArrayList<app.domain.model.AppRole> appRoles;
    private java.util.ArrayList<app.domain.model.AppUser> appUsers;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAddAll;
    private javax.swing.JButton btnBatchSetUserRoleDisable;
    private javax.swing.JButton btnBatchSetUsersRoleEnable;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnRemoveAll;
    private javax.swing.JButton btnSortAppUsers;
    private javax.swing.JButton btnSortSelectedUsers;
    private javax.swing.JComboBox cboAppRoles;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList lstAppUsers;
    private javax.swing.JList lstSelectedUsers;
    private java.util.ArrayList<app.domain.model.AppUser> selectedUsers;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
